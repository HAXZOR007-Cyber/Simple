# Author : DELA DRAYTON 
# https://www.github.com/HAXZOR007-Cyber
# apa liat liat file ini mau di dec ya 
# gk bakal bisa di dec file ini
# izin dulu mau dec file ini
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))